{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/components/MedicineInfo.tsx"],"sourcesContent":["import ReactMarkdown from 'react-markdown'\n\ninterface Medicine {\n  id?: string;\n  name: string;\n  genericName?: string;\n  description: string;\n  indications: string;\n  warnings: string;\n  dosage: string;\n}\n\ninterface MedicineInfoProps {\n  medicine: Medicine;\n}\n\nexport default function MedicineInfo({ medicine }: MedicineInfoProps) {\n  return (\n    <div className=\"space-y-4 prose\">\n      <h2 className=\"text-2xl font-semibold\">{medicine.name}</h2>\n      {medicine.genericName && (\n        <p className=\"text-gray-600\">Generic Name: {medicine.genericName}</p>\n      )}\n      <div>\n        <h3 className=\"text-lg font-semibold\">Description</h3>\n        <ReactMarkdown>{medicine.description}</ReactMarkdown>\n      </div>\n      <div>\n        <h3 className=\"text-lg font-semibold\">Indications and Usage</h3>\n        <ReactMarkdown>{medicine.indications}</ReactMarkdown>\n      </div>\n      <div>\n        <h3 className=\"text-lg font-semibold\">Warnings</h3>\n        <ReactMarkdown>{medicine.warnings}</ReactMarkdown>\n      </div>\n      <div>\n        <h3 className=\"text-lg font-semibold\">Dosage and Administration</h3>\n        <ReactMarkdown>{medicine.dosage}</ReactMarkdown>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;;AAgBe,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAClE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B,SAAS,IAAI;;;;;;YACpD,SAAS,WAAW,kBACnB,6LAAC;gBAAE,WAAU;;oBAAgB;oBAAe,SAAS,WAAW;;;;;;;0BAElE,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,6LAAC,2LAAA,CAAA,UAAa;kCAAE,SAAS,WAAW;;;;;;;;;;;;0BAEtC,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,6LAAC,2LAAA,CAAA,UAAa;kCAAE,SAAS,WAAW;;;;;;;;;;;;0BAEtC,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,6LAAC,2LAAA,CAAA,UAAa;kCAAE,SAAS,QAAQ;;;;;;;;;;;;0BAEnC,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,6LAAC,2LAAA,CAAA,UAAa;kCAAE,SAAS,MAAM;;;;;;;;;;;;;;;;;;AAIvC;KAzBwB"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,8JAAM,UAAU,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/components/ChatInterface.tsx"],"sourcesContent":["// components/ChatInterface.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2, AlertTriangle } from 'lucide-react';\nimport ReactMarkdown from 'react-markdown';\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\ninterface Medicine {\n  id?: string;\n  name: string;\n  genericName?: string;\n  description: string;\n  indications: string;\n  warnings: string;\n  dosage: string;\n}\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n}\n\ninterface ChatInterfaceProps {\n  medicine: Medicine;\n}\n\nexport default function ChatInterface({ medicine }: ChatInterfaceProps) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLLMData = medicine.id?.startsWith('gemini-');\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = input.trim();\n    setInput('');\n    setError('');\n    setIsLoading(true);\n\n    const userMessageObj: Message = { role: 'user', content: userMessage };\n    const newMessages: Message[] = [...messages, userMessageObj];\n    setMessages(newMessages);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          messages: newMessages,\n          medicineData: medicine\n        })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get response');\n      }\n\n      const assistantMessage: Message = { \n        role: 'assistant', \n        content: data.response \n      };\n      \n      setMessages([...newMessages, assistantMessage]);\n\n    } catch (err) {\n      console.error('Chat error:', err);\n      setError('Failed to send message. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"mt-4 space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Chat about {medicine.name}</h3>\n      \n      {isLLMData && (\n        <Alert>\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            This information is based on medical research. For the most accurate information, \n            please consult official sources or healthcare providers.\n          </AlertDescription>\n        </Alert>\n      )}\n      \n      <div className=\"h-96 overflow-y-auto border rounded-lg p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[80%] rounded-lg px-4 py-2 ${\n                message.role === 'user' \n                  ? 'bg-blue-500 text-white' \n                  : 'bg-gray-100 dark:bg-gray-800'\n              }`}\n            >\n              <ReactMarkdown \n                className={`prose ${message.role === 'user' ? 'text-white' : ''} max-w-none`}\n              >\n                {message.content}\n              </ReactMarkdown>\n            </div>\n          </div>\n        ))}\n        \n        {isLoading && (\n          <div className=\"flex justify-center\">\n            <Loader2 className=\"h-6 w-6 animate-spin\" />\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"text-red-500 text-center\">\n            {error}\n          </div>\n        )}\n      </div>\n\n      <form \n        onSubmit={handleSubmit} \n        className=\"flex gap-2\"\n      >\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask about this medicine...\"\n          className=\"flex-grow\"\n          disabled={isLoading}\n        />\n        <Button \n          type=\"submit\" \n          disabled={isLoading || !input.trim()}\n        >\n          {isLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : 'Send'}\n        </Button>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///Users/shantanukumar/Poshan/app/searchmedicine/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/components/ui/card\";\nimport MedicineInfo from \"@/components/MedicineInfo\";\nimport ChatInterface from \"@/components/ChatInterface\";\nimport { Search, Clock, PillIcon, MessageCircle } from \"lucide-react\";\n\ninterface Medicine {\n  id: string;\n  name: string;\n  genericName?: string;\n  description: string;\n  indications: string;\n  warnings: string;\n  dosage: string;\n}\n\nconst MAX_RECENT_SEARCHES = 5;\n\nexport default function Home() {\n  const [query, setQuery] = useState(\"\");\n  const [medicines, setMedicines] = useState<Medicine[]>([]);\n  const [selectedMedicine, setSelectedMedicine] = useState<Medicine | null>(\n    null\n  );\n  const [isSearching, setIsSearching] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [recentSearches, setRecentSearches] = useState<string[]>([]);\n\n  useEffect(() => {\n    const saved = localStorage.getItem(\"recentMedicineSearches\");\n    if (saved) {\n      setRecentSearches(JSON.parse(saved));\n    }\n  }, []);\n\n  const addToRecentSearches = (search: string) => {\n    const updated = [\n      search,\n      ...recentSearches.filter((s) => s !== search),\n    ].slice(0, MAX_RECENT_SEARCHES);\n    setRecentSearches(updated);\n    localStorage.setItem(\"recentMedicineSearches\", JSON.stringify(updated));\n  };\n\n  const searchMedicines = async (searchQuery: string) => {\n    if (!searchQuery.trim()) return;\n\n    setIsSearching(true);\n    setError(\"\");\n    try {\n      const res = await fetch(\n        `/api/medicine?query=${encodeURIComponent(searchQuery)}`\n      );\n      const data = await res.json();\n\n      if (res.ok) {\n        setMedicines(data);\n        addToRecentSearches(searchQuery);\n      } else {\n        throw new Error(data.error || \"Error searching for medicines\");\n      }\n    } catch (err) {\n      console.error(\"Error searching medicines:\", err);\n      setError(\n        err instanceof Error ? err.message : \"Error searching for medicines\"\n      );\n      setMedicines([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && query.trim()) {\n      searchMedicines(query);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800\">\n      <main className=\"container mx-auto px-4 py-12 max-w-7xl\">\n        {/* Header Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"bg-blue-500 p-3 rounded-full\">\n              <PillIcon className=\"h-8 w-8 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"text-sm font-semibold tracking-widest text-green-600 dark:text-green-400 uppercase mb-2\">\n            YOUR MEDICAL ASSISTANT\n          </h2>\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold bg-gradient-to-r from-green-700 to-green-700 bg-clip-text text-transparent dark:from-blue-500 dark:to-indigo-400 mb-4\">\n            Medicine Search & Chat\n          </h1>\n          <p className=\"text-slate-600 dark:text-slate-300 text-lg max-w-2xl mx-auto\">\n            Find detailed information about medications and get instant answers\n            from our medical assistant.\n          </p>\n        </div>\n\n        {/* Search Card */}\n        <Card className=\"mb-8 overflow-hidden border-none shadow-lg\">\n          <div className=\"bg-gradient-to-r text-green-600 dark:text-green-400 p-1\">\n            <CardHeader className=\"bg-white dark:bg-slate-800 pt-5\">\n              <CardTitle className=\"text-xl flex items-center gap-2\">\n                <Search className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                Find Your Medication\n              </CardTitle>\n              <CardDescription>\n                Search by brand name or generic name\n              </CardDescription>\n            </CardHeader>\n          </div>\n          <CardContent className=\"bg-white dark:bg-slate-800 p-6\">\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n              <div className=\"relative flex-grow\">\n                <Input\n                  type=\"text\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  onKeyDown={handleKeyPress}\n                  placeholder=\"Enter medicine name...\"\n                  className=\"border-slate-300 text-green-600 dark:text-green-400 dark:border-slate-700 h-12 text-lg\"\n                />\n              </div>\n              <Button\n                onClick={() => searchMedicines(query)}\n                disabled={isSearching || !query.trim()}\n                className=\" text-green-600 dark:text-green-400h-12 px-6 font-medium\"\n              >\n                {isSearching ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin mr-2 h-4 w-4 border-2 border-current border-t-transparent rounded-full\"></div>\n                    Searching...\n                  </div>\n                ) : (\n                  <>\n                    <Search className=\"w-4 h-4 mr-2\" />\n                    Search\n                  </>\n                )}\n              </Button>\n            </div>\n\n            {error && (\n              <div className=\"mt-4 bg-red-50 text-red-700 p-3 rounded-md border border-red-200 flex items-center\">\n                <div className=\"mr-3\">⚠️</div>\n                <p className=\"font-medium\">{error}</p>\n              </div>\n            )}\n\n            {recentSearches.length > 0 && (\n              <div className=\"mt-6\">\n                <div className=\"flex items-center gap-2 text-slate-500 mb-3\">\n                  <Clock className=\"w-4 h-4\" />\n                  <p className=\"text-sm font-medium\">Recent searches</p>\n                </div>\n                <div className=\"flex flex-wrap gap-2\">\n                  {recentSearches.map((search, index) => (\n                    <Button\n                      key={index}\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => {\n                        setQuery(search);\n                        searchMedicines(search);\n                      }}\n                      className=\"bg-slate-100 hover:bg-slate-200 text-slate-700 border-slate-300 dark:bg-slate-700 dark:border-slate-600 dark:text-slate-200\"\n                    >\n                      {search}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Results Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Search Results */}\n          <Card className=\"border-none shadow-lg h-[500px] flex flex-col\">\n            <div className=\"bg-gradient-to-r text-green-600 dark:text-green-400 p-1\">\n              <CardHeader className=\"bg-white dark:bg-slate-800 pt-5\">\n                <CardTitle className=\"text-xl flex items-center gap-2\">\n                  <PillIcon className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                  Search Results\n                </CardTitle>\n                <CardDescription>\n                  {medicines.length} medication\n                  {medicines.length !== 1 ? \"s\" : \"\"} found\n                </CardDescription>\n              </CardHeader>\n            </div>\n            <CardContent className=\"flex-1 overflow-y-auto bg-white dark:bg-slate-800 p-6\">\n              {medicines.length > 0 ? (\n                <ul className=\"space-y-2 divide-y divide-slate-200 dark:divide-slate-700\">\n                  {medicines.map((medicine, index) => (\n                    <li\n                      key={medicine.id || index}\n                      className={`cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-700 p-3 rounded-lg transition-all ${\n                        selectedMedicine?.id === medicine.id\n                          ? \"bg-blue-50 dark:bg-slate-700 border-l-4 border-blue-500\"\n                          : \"\"\n                      }`}\n                      onClick={() => setSelectedMedicine(medicine)}\n                    >\n                      <div className=\"font-medium text-lg\">{medicine.name}</div>\n                      {medicine.genericName && (\n                        <div className=\"text-sm text-slate-500 dark:text-slate-400 mt-1\">\n                          Generic: {medicine.genericName}\n                        </div>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <div className=\"h-full flex flex-col items-center justify-center text-center p-6\">\n                  <div className=\"bg-slate-100 dark:bg-slate-700 p-4 rounded-full mb-4\">\n                    <Search className=\"h-6 w-6 text-slate-400\" />\n                  </div>\n                  <p className=\"text-slate-600 dark:text-slate-400 font-medium\">\n                    No medicines found\n                  </p>\n                  <p className=\"text-slate-500 dark:text-slate-500 text-sm mt-1\">\n                    Try searching for a different medicine\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Medicine Info and Chat */}\n          <Card className=\"border-none shadow-lg h-[500px] flex flex-col\">\n            <div className=\"bg-gradient-to-r text-green-600 dark:text-green-400 p-1\">\n              <CardHeader className=\"bg-white dark:bg-slate-800 pt-5\">\n                <CardTitle className=\"text-xl flex items-center gap-2\">\n                  <MessageCircle className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n                  Medicine Information\n                </CardTitle>\n                <CardDescription>\n                  {selectedMedicine\n                    ? selectedMedicine.name\n                    : \"Select a medicine to view details\"}\n                </CardDescription>\n              </CardHeader>\n            </div>\n            <CardContent className=\"flex-1 overflow-y-auto bg-white dark:bg-slate-800 p-6\">\n              {selectedMedicine ? (\n                <>\n                  <MedicineInfo medicine={selectedMedicine} />\n                  <div className=\"mt-6 pt-6 border-t border-slate-200 dark:border-slate-700\">\n                    <ChatInterface medicine={selectedMedicine} />\n                  </div>\n                </>\n              ) : (\n                <div className=\"h-full flex flex-col items-center justify-center text-center p-6\">\n                  <div className=\"bg-slate-100 dark:bg-slate-700 p-4 rounded-full mb-4\">\n                    <PillIcon className=\"h-6 w-6 text-slate-400\" />\n                  </div>\n                  <p className=\"text-slate-600 dark:text-slate-400 font-medium\">\n                    No medicine selected\n                  </p>\n                  <p className=\"text-slate-500 dark:text-slate-500 text-sm mt-1\">\n                    Select a medicine from the search results\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;;;AAbA;;;;;;;;AAyBA,MAAM,sBAAsB;AAEb,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACrD;IAEF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEjE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,OAAO;gBACT,kBAAkB,KAAK,KAAK,CAAC;YAC/B;QACF;yBAAG,EAAE;IAEL,MAAM,sBAAsB,CAAC;QAC3B,MAAM,UAAU;YACd;eACG,eAAe,MAAM,CAAC,CAAC,IAAM,MAAM;SACvC,CAAC,KAAK,CAAC,GAAG;QACX,kBAAkB;QAClB,aAAa,OAAO,CAAC,0BAA0B,KAAK,SAAS,CAAC;IAChE;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI,CAAC,YAAY,IAAI,IAAI;QAEzB,eAAe;QACf,SAAS;QACT,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,CAAC,oBAAoB,EAAE,mBAAmB,cAAc;YAE1D,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,IAAI,IAAI,EAAE,EAAE;gBACV,aAAa;gBACb,oBAAoB;YACtB,OAAO;gBACL,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;YAEvC,aAAa,EAAE;QACjB,SAAU;YACR,eAAe;QACjB;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,MAAM,IAAI,IAAI;YACrC,gBAAgB;QAClB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAK,WAAU;;8BAEd,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,yMAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAGxB,6LAAC;4BAAG,WAAU;sCAA0F;;;;;;sCAGxG,6LAAC;4BAAG,WAAU;sCAAmK;;;;;;sCAGjL,6LAAC;4BAAE,WAAU;sCAA+D;;;;;;;;;;;;8BAO9E,6LAAC,4HAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,4HAAA,CAAA,aAAU;gCAAC,WAAU;;kDACpB,6LAAC,4HAAA,CAAA,YAAS;wCAAC,WAAU;;0DACnB,6LAAC,yMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAA+C;;;;;;;kDAGnE,6LAAC,4HAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;;;;;;sCAKrB,6LAAC,4HAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,6HAAA,CAAA,QAAK;gDACJ,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gDACxC,WAAW;gDACX,aAAY;gDACZ,WAAU;;;;;;;;;;;sDAGd,6LAAC,8HAAA,CAAA,SAAM;4CACL,SAAS,IAAM,gBAAgB;4CAC/B,UAAU,eAAe,CAAC,MAAM,IAAI;4CACpC,WAAU;sDAET,4BACC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;oDAA4F;;;;;;qEAI7G;;kEACE,6LAAC,yMAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;gCAO1C,uBACC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAAO;;;;;;sDACtB,6LAAC;4CAAE,WAAU;sDAAe;;;;;;;;;;;;gCAI/B,eAAe,MAAM,GAAG,mBACvB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,uMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;8DACjB,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;;;;;;;sDAErC,6LAAC;4CAAI,WAAU;sDACZ,eAAe,GAAG,CAAC,CAAC,QAAQ,sBAC3B,6LAAC,8HAAA,CAAA,SAAM;oDAEL,SAAQ;oDACR,MAAK;oDACL,SAAS;wDACP,SAAS;wDACT,gBAAgB;oDAClB;oDACA,WAAU;8DAET;mDATI;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAmBnB,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC,4HAAA,CAAA,OAAI;4BAAC,WAAU;;8CACd,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,4HAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,6LAAC,4HAAA,CAAA,YAAS;gDAAC,WAAU;;kEACnB,6LAAC,yMAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;oDAA+C;;;;;;;0DAGrE,6LAAC,4HAAA,CAAA,kBAAe;;oDACb,UAAU,MAAM;oDAAC;oDACjB,UAAU,MAAM,KAAK,IAAI,MAAM;oDAAG;;;;;;;;;;;;;;;;;;8CAIzC,6LAAC,4HAAA,CAAA,cAAW;oCAAC,WAAU;8CACpB,UAAU,MAAM,GAAG,kBAClB,6LAAC;wCAAG,WAAU;kDACX,UAAU,GAAG,CAAC,CAAC,UAAU,sBACxB,6LAAC;gDAEC,WAAW,CAAC,wFAAwF,EAClG,kBAAkB,OAAO,SAAS,EAAE,GAChC,4DACA,IACJ;gDACF,SAAS,IAAM,oBAAoB;;kEAEnC,6LAAC;wDAAI,WAAU;kEAAuB,SAAS,IAAI;;;;;;oDAClD,SAAS,WAAW,kBACnB,6LAAC;wDAAI,WAAU;;4DAAkD;4DACrD,SAAS,WAAW;;;;;;;;+CAX7B,SAAS,EAAE,IAAI;;;;;;;;;6DAkB1B,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,yMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;;;;;;0DAEpB,6LAAC;gDAAE,WAAU;0DAAiD;;;;;;0DAG9D,6LAAC;gDAAE,WAAU;0DAAkD;;;;;;;;;;;;;;;;;;;;;;;sCASvE,6LAAC,4HAAA,CAAA,OAAI;4BAAC,WAAU;;8CACd,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,4HAAA,CAAA,aAAU;wCAAC,WAAU;;0DACpB,6LAAC,4HAAA,CAAA,YAAS;gDAAC,WAAU;;kEACnB,6LAAC,2NAAA,CAAA,gBAAa;wDAAC,WAAU;;;;;;oDAA6C;;;;;;;0DAGxE,6LAAC,4HAAA,CAAA,kBAAe;0DACb,mBACG,iBAAiB,IAAI,GACrB;;;;;;;;;;;;;;;;;8CAIV,6LAAC,4HAAA,CAAA,cAAW;oCAAC,WAAU;8CACpB,iCACC;;0DACE,6LAAC,8HAAA,CAAA,UAAY;gDAAC,UAAU;;;;;;0DACxB,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,+HAAA,CAAA,UAAa;oDAAC,UAAU;;;;;;;;;;;;qEAI7B,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC,yMAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DAEtB,6LAAC;gDAAE,WAAU;0DAAiD;;;;;;0DAG9D,6LAAC;gDAAE,WAAU;0DAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWjF;GAhQwB;KAAA"}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}